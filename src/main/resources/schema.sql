DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  description VARCHAR(255) NOT NULL,
  requestor_id INTEGER NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE,
  CONSTRAINT pk_request PRIMARY KEY (id),
  CONSTRAINT requests_users_fk FOREIGN KEY (requestor_id) REFERENCES PUBLIC.users(id)
            ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(255) NOT NULL,
  is_available BOOLEAN NOT NULL,
  owner_id INTEGER NOT NULL,
  request_id INTEGER,
  CONSTRAINT pk_item PRIMARY KEY (id),
  CONSTRAINT items_users_fk FOREIGN KEY (request_id) REFERENCES PUBLIC.users(id),
  CONSTRAINT items_requests_fk FOREIGN KEY (request_id) REFERENCES PUBLIC.requests(id)
);

CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_date  TIMESTAMP WITHOUT TIME ZONE,
  end_date  TIMESTAMP WITHOUT TIME ZONE,
  item_id INTEGER NOT NULL,
  booker_id INTEGER NOT NULL,
  status VARCHAR(10) NOT NULL,
  CONSTRAINT pk_booking PRIMARY KEY (id),
  CONSTRAINT bookings_items_fk FOREIGN KEY (item_id) REFERENCES PUBLIC.items(id),
  CONSTRAINT bookings_users_fk FOREIGN KEY (booker_id) REFERENCES PUBLIC.users(id)
);

CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text VARCHAR(255) NOT NULL,
  item_id INTEGER NOT NULL,
  author_id INTEGER NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (id),
  created  TIMESTAMP WITHOUT TIME ZONE,
  CONSTRAINT comments_users_fk FOREIGN KEY (author_id) REFERENCES PUBLIC.users(id),
  CONSTRAINT comments_items_fk FOREIGN KEY (item_id) REFERENCES PUBLIC.items(id)
);